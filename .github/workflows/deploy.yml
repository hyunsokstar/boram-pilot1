name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch: # 수동 실행 가능

jobs:
  # CI 단계: 빌드 및 테스트
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type check
      run: npx tsc --noEmit
      
    - name: Lint check
      run: npm run lint
        
    - name: Build application
      run: npm run build
      
    - name: Run tests (if available)
      run: npm test --if-present

  # CD 단계: 프로덕션 배포
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        timeout: 300s
        script: |
          set -e
          
          echo "🚀 Starting deployment..."
          
          # 프로젝트 디렉토리로 이동 (실제 EC2 경로 확인 필요)
          cd /home/ubuntu/boram-pilot1
          
          # Git 상태 확인 및 pull
          echo "📥 Pulling latest changes..."
          sudo git fetch origin
          sudo git reset --hard origin/main
          sudo git clean -fd
          
          # Node.js 의존성 설치
          echo "📦 Installing dependencies..."
          npm install --production=false
          
          # 빌드 실행
          echo "🔨 Building application..."
          npm run build
          
          # PM2로 애플리케이션 재시작
          echo "🔄 Restarting application..."
          pm2 restart boram-pilot1 || pm2 start ecosystem.config.js
          
          # PM2 설정 저장
          pm2 save
          
          # 헬스체크
          echo "🏥 Health check..."
          sleep 10
          curl -f http://localhost:3000/api/health || echo "Health check failed"
          
          # 상태 확인
          echo "✅ Checking application status..."
          pm2 status
          
          echo "🎉 Deployment completed successfully!"
          
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Deployment succeeded!"
        else
          echo "❌ Deployment failed!"
        fi
