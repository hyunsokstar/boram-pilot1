name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch: # 수동 실행 가능

jobs:
  # CI 단계: 빌드 및 테스트
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npx tsc --noEmit

      - name: Lint check
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Run tests (if available)
        run: npm test --if-present

  # CD 단계: 프로덕션 배포
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          timeout: 300s
          script: |
            set -e

            echo "🚀 Starting deployment..."

            # Node.js 확인 및 설치
            if ! command -v node >/dev/null 2>&1; then
              echo "📥 Installing Node.js..."
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            else
              echo "✅ Node.js: $(node --version)"
            fi

            # PM2 확인 및 설치
            if ! command -v pm2 >/dev/null 2>&1; then
              echo "📥 Installing PM2..."
              sudo npm install -g pm2
            else
              echo "✅ PM2: $(pm2 -v)"
            fi

            PROJECT_PATH="/home/ubuntu/boram-pilot1"
            cd "$PROJECT_PATH"

            # EACCES 방지를 위해 소유권 정리 (과거 sudo로 생성된 파일 정리)
            echo "🔐 Fixing ownership..."
            sudo chown -R $USER:$USER .

            echo "📥 Pulling latest changes..."
            git fetch --all --prune
            git reset --hard origin/main
            git clean -fd

            echo "📦 Installing dependencies..."
            rm -rf node_modules
            npm ci --omit=dev --no-audit --no-fund

            echo "🔨 Building application (production)..."
            npm run build:production

            echo "🔄 Restarting application via PM2..."
            pm2 restart boram-pilot1 || pm2 start ecosystem.config.js
            pm2 save

            echo "🏥 Health check..."
            sleep 10
            curl -f http://localhost:3000/api/health || echo "Health check failed"

            echo "🎉 Deployment completed successfully!"

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment succeeded!"
          else
            echo "❌ Deployment failed!"
          fi
